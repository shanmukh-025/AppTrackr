/**
 * Test Learning Cache (Tier 2)
 * Tests auto-saving companies after 3+ searches
 */

const { findCompanyCareerPage } = require('./utils/companyCareerPages');
const prisma = require('./prisma/client');

async function testLearning() {
  console.log('🧪 Testing Learning Cache System\n');
  console.log('='.repeat(60));
  
  const testCompany = 'Acme Software Corp';
  
  console.log(`\n📋 Testing with: "${testCompany}"`);
  console.log('This company is NOT in the static database\n');
  console.log('-'.repeat(60));
  
  // Search 4 times
  for (let i = 1; i <= 4; i++) {
    console.log(`\n🔍 Search ${i}/4:`);
    const result = await findCompanyCareerPage(testCompany);
    console.log(`   Result: ${result}`);
    
    // Check if it's in database yet
    const inDb = await prisma.companyCareerPage.findUnique({
      where: { companyName: 'acme software' }
    });
    
    if (inDb) {
      console.log(`   ✅ NOW IN DATABASE! (Search count: ${inDb.searchCount})`);
    } else {
      console.log(`   ⏳ Not in database yet (${i}/3 searches)`);
    }
  }
  
  console.log('\n' + '='.repeat(60));
  
  // Final verification
  const final = await prisma.companyCareerPage.findUnique({
    where: { companyName: 'acme software' }
  });
  
  if (final) {
    console.log('\n✅ SUCCESS: Learning cache worked!');
    console.log(`   Company: ${final.companyName}`);
    console.log(`   URL: ${final.careerUrl}`);
    console.log(`   Source: ${final.source}`);
    console.log(`   Search Count: ${final.searchCount}`);
    console.log(`   Created: ${final.createdAt}`);
  } else {
    console.log('\n❌ FAILED: Company not saved to database');
  }
  
  console.log('\n' + '='.repeat(60));
  
  // Show all auto-generated companies
  const autoGenerated = await prisma.companyCareerPage.findMany({
    where: { source: 'auto-generated' },
    orderBy: { searchCount: 'desc' }
  });
  
  console.log(`\n📊 All Auto-Generated Companies: ${autoGenerated.length}`);
  autoGenerated.forEach((company, idx) => {
    console.log(`   ${idx + 1}. ${company.companyName} (${company.searchCount} searches)`);
  });
  
  await prisma.$disconnect();
}

testLearning().catch(error => {
  console.error('❌ Error:', error);
  process.exit(1);
});
